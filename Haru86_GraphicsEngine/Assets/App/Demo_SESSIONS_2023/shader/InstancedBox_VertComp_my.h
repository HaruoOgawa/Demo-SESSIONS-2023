// Generated with Shader Minifier 1.3.5 (https://github.com/laurentlb/Shader_Minifier/)

// input
"#version 430\n"
"uniform mat4 MVPMatrix,MMatrix,VMatrix,PMatrix;"
"uniform float _time,_deltaTime,_MaxBoxHeight,_SideCubeNum,_Brightness;"
"layout(location=0) in vec3 vertex;"
"layout(location=1) in vec3 normal;"
"layout(location=2) in vec2 texcoord;"
"out vec3 worldPosition,worldNormal;"
"out float id;"
"out vec3 randColor;"
"out vec2 uv;"
"struct SBoxData { vec4 Pos, Rot, Scl, Data; }; layout(std430, binding = 3) buffer destBoxDataBuffer { SBoxData data[]; } outBoxDataBuffer;"
"vec3 v(vec3 v)"
"{"
"vec4 l=vec4(1,2./3.,1./3.,3);"
"return v.z*mix(l.xxx,clamp(abs(fract(v.xxx+l.xyz)*6.-l.www)-l.xxx,0.,1.),v.y);"
"}"
"void main()"
"{"
"SBoxData l=outBoxDataBuffer.data[gl_InstanceID];"
"mat4x4 n=mat4x4(vec4(l.Scl.x,0,0,0),vec4(0,l.Scl.y,0,0),vec4(0,0,l.Scl.z,0),vec4(0,0,0,1));"
"vec3 x=(n*vec4(vertex,1)).xyz;"
"x+=l.Pos.xyz;"
"gl_Position=PMatrix*VMatrix*vec4(x,1);"
"worldPosition=x;"
"worldNormal=normalize((n*vec4(normal,1)).xyz);"
"id=float(gl_InstanceID);"
"float i=l.Scl.y/_MaxBoxHeight,_=1.-clamp(length(x.xz)/(_SideCubeNum*.5),0.,1.);"
"randColor=v(vec3(mod(i+_time*.1,1.),1.-i,_))*_Brightness;"
"uv=texcoord;"
"}",

